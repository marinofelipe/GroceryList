DOING:
    - CurrencyUITextField
        - cursor refactor
        - cursor and remaining string tests
TODO:
    - CurrencyUITextField
        - enable all of following modes through enum type
            - from left to right input
            - decimal pad (maybe free inputing)
        - rethink convenience init with numberFormatter. numberStyle and alwaysShowsDecimalSeparators might break things
    

// selecting a row will animate price subview
    // animate text field from row frame

// while receiving input the price text will format content as currency

// price text filed will appear as subview of the collection view or main view
// will be a nice looking text field waiting for the user to input value

// clicking outside the price text field would dismiss it
// clicking ok in the keyboard would confirm the value and add the row to the bought section


IDEAS:
    - bought item with price indication based on history (more/less than best price && percentage)
    - real time shopping some and items price indicators to help in his decisions
    
    - COREML?
    
    - Think about how to differ creating and buying modes
    
    - Price indicators based on history
    
GOAL: 
    - Fast to use experience
    - help user decisions with price and sum indicators
